rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Main photos folder: allow public read, authenticated write, authenticated list
    match /photos/{photoId} {
      allow read: if true; // Allow public read for displaying images
      allow write: if request.auth != null;
      allow list: if request.auth != null;
    }
    
    // Photos folder: allow public read, authenticated write, authenticated list
    match /photos/{userId}/{photoId} {
      allow read: if true; // Allow public read for displaying images
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow listing photos folder for authenticated users
    match /photos/{userId} {
      allow list: if request.auth != null;
    }

    // Users photos folder: allow public read, authenticated write, authenticated list
    match /users/{userId}/photos/{photoId} {
      allow read: if true; // Allow public read for displaying images
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow listing users photos folder for authenticated users
    match /users/{userId}/photos {
      allow list: if request.auth != null;
    }

    // Allow users to read and write their own profile images (any extension)
    match /profile_images/{userId}/{fileName} {
      allow read: if true; // Allow public read for profile images
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow listing profile images folder for authenticated users
    match /profile_images/{userId} {
      allow list: if request.auth != null;
    }
    
    // User photos for profile images: allow public read, authenticated write for own photos
    match /user_photos/{fileName} {
      allow read: if true; // Allow public read for profile images
      allow write: if request.auth != null;
    }
    
    // Chat images: allow authenticated users to upload/download
    match /chat_images/{chatId}/{fileName} {
      allow read, write: if request.auth != null;
    }
    
    // Chat files: allow authenticated users to upload/download
    match /chat_files/{chatId}/{fileName} {
      allow read, write: if request.auth != null;
    }
    
    // Comment images: allow authenticated users to upload/download their own comment images
    match /comment_images/{userId}/{fileName} {
      allow read: if true; // Allow public read for displaying comment images
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Post images: allow authenticated users to upload, allow public read
    match /post_images/{userId}/{fileName} {
      allow read: if true; // Allow public read for displaying post images
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Post videos: allow authenticated users to upload, allow public read
    // All videos are compressed and stored as MP4 for optimal space usage
    // Accepts input formats: mp4, mov, avi, mkv, webm, m4v - all converted to optimized MP4
    match /post_videos/{userId}/{fileName} {
      allow read: if true; // Allow public read for displaying post videos
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Post thumbnails: allow authenticated users to upload, allow public read
    // Video thumbnails are generated to reduce bandwidth - shown instead of loading full video
    match /post_thumbnails/{userId}/{fileName} {
      allow read: if true; // Allow public read for displaying thumbnails
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Default deny
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
} 